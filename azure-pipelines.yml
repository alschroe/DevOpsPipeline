# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Subscription'
    azureResourceManagerConnection: 'AzureInternal(921b1060-fc07-42c5-8bad-c255bbf99a42)'
    subscriptionId: '921b1060-fc07-42c5-8bad-c255bbf99a42'
    location: 'North Europe'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://github.com/alschroe/DevOpsPipeline/blob/master/template.json'
    deploymentMode: 'Incremental'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)' # Update this to match your need

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:    
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: 5.0.x

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'SubscriptionName(Subscription-ID)'
    appType: 'webApp'
    WebAppName: 'tbd'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'